try
  Getopt = require './..'
  assert = require 'assert'

  eq = assert.deepEqual
  throws = assert.throws

  # has argument
  getopt = new Getopt([
    ['a', 'has-argument', 1, 0],
  ])

  eq(
    getopt.parse(['-a', 'a-value'])
    {
      argv: [],
      options: {
        'has-argument': 'a-value', 
      }
    },
    'has-argument'
  )

  eq(
    getopt.parse(['--has-argument', 'a-value'])
    {
      argv: [],
      options: {
        'has-argument': 'a-value',
      }
    },
    'has-argument'
  )

  # no argument
  getopt = new Getopt([
    ['A', 'A',  0, 0]
    ['B', 'B',  0, 0]
    ['C', 'C',  0, 0]
  ])

  eq(
    getopt.parse(['-ABC'])
    {
      argv: [], 
      options: {
        'A': true,
        'B': true,
        'C': true
      }
    },
    'no-argument'
  )

  # combined has argument and no argument
  getopt = new Getopt([
    ['a', 'a',  1, 0]
    ['A', 'A',  0, 0]
    ['B', 'B',  0, 0]
    ['C', 'C',  0, 0]
  ])

  eq(
    getopt.parse(['-ABCa', 'foo'])
    {
      argv: [], 
      options: {
        'A': true,
        'B': true,
        'C': true,
        'a': 'foo'
      }
    },
    'no-argument'
  )

  # invalid  option check
  getopt = new Getopt([
  ])

  throws(
    -> getopt.parse(['-A'])
    (err) -> err.message == 'invalid option A'
  )

  # long option
  getopt = new Getopt([
    ['h', 'help', 0, 0]
  ])

  eq(
    getopt.parse(['--help']),
    {
      argv: [],
      options: {
        'help': true
      }
    },
    'long option'
  )

  # keep data after --
  getopt = new Getopt([
  ])

  eq(
    getopt.parse('-- hello world'.split(' ')),
    {
      argv: ['hello', 'world'],
      options: {}
    }
  )
  

  # mixed
  getopt = new Getopt([
    ['h', 'help', 0, 0],
    ['m', 'multi', 1, 1],
    ['s', 'short', 0, 0]
  ])

  eq(
    getopt.parse('foo --help --multi a -m b -sm c -- --help'.split(' ')),
    {
      argv: ['foo', '--help'],
      options: {
        'help': true,
        'multi': ['a', 'b', 'c'],
        'short': true
      }
    }
  )

  console.info 'Test passed.'
catch e
  console.info e
  console.info '\n--- STACK TRACE ---\n'
  console.info e.stack
