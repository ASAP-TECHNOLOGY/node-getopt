// Generated by ToffeeScript 1.3.3
(function() {
  var Getopt, assert, eq, getopt, throws;

  try {
    Getopt = require('./..');
    assert = require('assert');
    eq = assert.deepEqual;
    throws = assert.throws;
    getopt = new Getopt([['a', 'has-argument', 1, 0]]);
    eq(getopt.parse(['-a', 'a-value']), {
      argv: [],
      options: {
        'has-argument': 'a-value'
      }
    }, 'has-argument');
    eq(getopt.parse(['--has-argument', 'a-value']), {
      argv: [],
      options: {
        'has-argument': 'a-value'
      }
    }, 'has-argument');
    getopt = new Getopt([['A', 'A', 0, 0], ['B', 'B', 0, 0], ['C', 'C', 0, 0]]);
    eq(getopt.parse(['-ABC']), {
      argv: [],
      options: {
        'A': true,
        'B': true,
        'C': true
      }
    }, 'no-argument');
    getopt = new Getopt([['a', 'a', 1, 0], ['A', 'A', 0, 0], ['B', 'B', 0, 0], ['C', 'C', 0, 0]]);
    eq(getopt.parse(['-ABCa', 'foo']), {
      argv: [],
      options: {
        'A': true,
        'B': true,
        'C': true,
        'a': 'foo'
      }
    }, 'no-argument');
    getopt = new Getopt([]);
    throws(function() {
      return getopt.parse(['-A']);
    }, function(err) {
      return err.message === 'invalid option A';
    });
    getopt = new Getopt([['h', 'help', 0, 0]]);
    eq(getopt.parse(['--help']), {
      argv: [],
      options: {
        'help': true
      }
    }, 'long option');
    getopt = new Getopt([]);
    eq(getopt.parse('-- hello world'.split(' ')), {
      argv: ['hello', 'world'],
      options: {}
    });
    getopt = new Getopt([['h', 'help', 0, 0], ['m', 'multi', 1, 1], ['s', 'short', 0, 0]]);
    eq(getopt.parse('foo --help --multi a -m b -sm c -- --help'.split(' ')), {
      argv: ['foo', '--help'],
      options: {
        'help': true,
        'multi': ['a', 'b', 'c'],
        'short': true
      }
    });
    console.info('Test passed.');
  } catch (e) {
    console.info(e);
    console.info('\n--- STACK TRACE ---\n');
    console.info(e.stack);
  }

}).call(this);
